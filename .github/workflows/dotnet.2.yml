name: 2.Todo Build (parallel jobs and artifacts sharing)

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/**.md'
      - './img/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  PROJECT_PATH_TODO_UI: './src/todo.ui/todo.ui.csproj'
  PROJECT_PATH_TODO_REPO: './src/todo.repo/todo.repo.csproj'
  PROJECT_PATH_TODO_INFRA_BICEP: './src/todo.infra/azuredeploy.bicep'
  PROJECT_PATH_TODO_INFRA_JSON: './src/todo.infra/azuredeploy.json'
  PROJECT_OUT_PATH_TODO_UI: './out/todo.ui'
  PROJECT_OUT_PATH_TODO_REPO: './out/todo.repo'
  PROJECT_DIR_PATH_TODO_INFRA: './src/todo.infra/'
  RESOURCE_GROUP: tododevops-dev

  PROJECT_PATH_TODO_INFRA_PARAM: './src/todo.infra/azuredeploy.parameters.dev.json'

jobs:

  build:
  
    runs-on: ubuntu-latest

    steps:
    
    - uses: actions/checkout@v2

      # Build projects

    - name: build and publish todo repo
      run: |
        dotnet restore ${{env.PROJECT_PATH_TODO_REPO}}
        dotnet build ${{env.PROJECT_PATH_TODO_REPO}} --configuration Release
        dotnet publish ${{env.PROJECT_PATH_TODO_REPO}} -c Release -o '${{ env.PROJECT_OUT_PATH_TODO_REPO }}' 

    - name: build and publish todo ui
      run: |
        dotnet restore ${{env.PROJECT_PATH_TODO_UI}}
        dotnet build ${{env.PROJECT_PATH_TODO_UI}} --configuration Release
        dotnet publish ${{env.PROJECT_PATH_TODO_UI}} -c Release -o '${{ env.PROJECT_OUT_PATH_TODO_UI }}' 

    # upload artifacts
    - name: upload ui artifacts
      uses: actions/upload-artifact@v2
      with:
          name: package
          path: ./out/

  deploy:
  
    runs-on: ubuntu-latest
    
    steps:
    
    - uses: actions/checkout@v2

    - name: 'build bicep ðŸ’ª'
      run: |
        az bicep build --file ${{env.PROJECT_PATH_TODO_INFRA_BICEP}}
    
    - name: login to azure from cli
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: create/update infrastructure from arm template
      uses: azure/CLI@v1
      with:
        inlineScript: |
          outputs=$(az deployment group create -g ${{env.RESOURCE_GROUP}} --template-file ${{env.PROJECT_PATH_TODO_INFRA_JSON}} --parameters ${{env.PROJECT_PATH_TODO_INFRA_PARAM}})
          webapp_name_repo_out=$(echo $outputs | jq -r .properties.outputs.webapp_name_repo.value)
          webapp_name_ui_out=$(echo $outputs | jq -r .properties.outputs.webapp_name_ui.value)
          echo webapp_name_repo=$webapp_name_repo_out >> $GITHUB_ENV
          echo webapp_name_ui=$webapp_name_ui_out >> $GITHUB_ENV
    
    - name: download release artifacts
      uses: actions/download-artifact@v2
      with:
        name: package
        path: ./release

    - name: deploy todo repo web api
      uses: azure/webapps-deploy@v2
      with: 
        app-name: ${{ env.webapp_name_repo }}
        package: ./release/todo.repo

    - name: deploy todo ui web app
      uses: azure/webapps-deploy@v2
      with: 
        app-name: ${{ env.webapp_name_ui }}
        package: ./release/todo.ui

    - name: logout
      run: |
        az logout
