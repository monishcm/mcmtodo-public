{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1.14562",
      "templateHash": "16655704738581423519"
    }
  },
  "parameters": {
    "databaseAccountName": {
      "type": "string",
      "metadata": {
        "description": "The Azure Cosmos DB database account name."
      }
    },
    "dbName": {
      "type": "string",
      "defaultValue": "todolist"
    },
    "containerName": {
      "type": "string",
      "defaultValue": "todoitems"
    },
    "databaseAccountTier": {
      "type": "string",
      "defaultValue": "Standard"
    },
    "partitionKey": {
      "type": "string",
      "defaultValue": "/userId"
    },
    "appSvcPlanName": {
      "type": "string",
      "metadata": {
        "description": "The name of the App Service Plan that will host the Web App."
      }
    },
    "svcPlanSize": {
      "type": "string",
      "defaultValue": "B1",
      "metadata": {
        "description": "The instance size of the App Service Plan."
      }
    },
    "svcPlanSku": {
      "type": "string",
      "defaultValue": "Basic",
      "metadata": {
        "description": "The pricing tier of the App Service plan."
      }
    },
    "webAppName_repo": {
      "type": "string",
      "metadata": {
        "description": "The name of the Repo Web API."
      }
    },
    "webAppName_ui": {
      "type": "string",
      "metadata": {
        "description": "The name of the UI Web App."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "functions": [],
  "resources": [
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2021-04-15",
      "name": "[parameters('databaseAccountName')]",
      "location": "[parameters('location')]",
      "properties": {
        "name": "[parameters('databaseAccountName')]",
        "databaseAccountOfferType": "[parameters('databaseAccountTier')]",
        "locations": [
          {
            "locationName": "[parameters('location')]",
            "failoverPriority": 0,
            "isZoneRedundant": true
          }
        ],
        "capabilities": [
          {
            "name": "EnableServerless"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02-preview",
      "name": "[parameters('webAppName_repo')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[parameters('appSvcPlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('svcPlanSize')]",
        "tier": "[parameters('svcPlanSku')]",
        "capacity": 1
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[parameters('webAppName_repo')]",
      "location": "[parameters('location')]",
      "properties": {
        "httpsOnly": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appSvcPlanName'))]",
        "siteConfig": {
          "phpVersion": "off",
          "appSettings": [
            {
              "name": "CosmosDb:ConnectionString",
              "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccountName')), '2020-04-01').connectionStrings[0].connectionString]"
            },
            {
              "name": "CosmosDb:DatabaseName",
              "value": "[parameters('dbName')]"
            },
            {
              "name": "CosmosDb:CollectionName",
              "value": "[parameters('containerName')]"
            },
            {
              "name": "CosmosDb:PartitionKey",
              "value": "[parameters('partitionKey')]"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(format('Microsoft.Insights/components/{0}', parameters('webAppName_repo'))).InstrumentationKey]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', parameters('webAppName_repo'))]",
        "[resourceId('Microsoft.Web/serverfarms', parameters('appSvcPlanName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[parameters('webAppName_ui')]",
      "location": "[parameters('location')]",
      "properties": {
        "httpsOnly": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appSvcPlanName'))]",
        "siteConfig": {
          "phpVersion": "off",
          "appSettings": [
            {
              "name": "TodoRepoUrl",
              "value": "[format('https://{0}.azurewebsites.net', parameters('webAppName_repo'))]"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(format('Microsoft.Insights/components/{0}', parameters('webAppName_repo'))).InstrumentationKey]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', parameters('webAppName_repo'))]",
        "[resourceId('Microsoft.Web/serverfarms', parameters('appSvcPlanName'))]",
        "[resourceId('Microsoft.Web/sites', parameters('webAppName_repo'))]"
      ]
    }
  ],
  "outputs": {
    "webapp_name_repo": {
      "type": "string",
      "value": "[parameters('webAppName_repo')]"
    },
    "webapp_name_ui": {
      "type": "string",
      "value": "[parameters('webAppName_ui')]"
    }
  }
}